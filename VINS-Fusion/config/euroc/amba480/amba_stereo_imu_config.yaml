%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/data_raw"
image0_topic: "/stereo_l_pub"
image1_topic: "/stereo_r_pub"
output_path: "~/output/"

cam0_calib: "cam0_pinhole.yaml"
cam1_calib: "cam1_pinhole.yaml"
image_width: 720
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0.01014916,  0.00517993,  0.99993508, -0.00088805,
            -0.99988388,  0.01142013,  0.01008949,  0.01133131,
            -0.01136712, -0.99992137,  0.00529523, -0.01421815,
             0,          0,          0,          1        ]

                   #[0.00366958,  0.0318901,   0.99948465,  0.02643257,
    #                 -0.99995027,  0.0093855,  0.00337183,  0.06002952,
     #                -0.00927314, -0.99944731,  0.03192295, -0.00877935,
      #                0 ,         0,          0 ,         1        ]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.01182314, -0.00272095,  0.9999264,   0.00374245,
           -0.99987399,  0.01056202,  0.01185126, -0.10909869,
           -0.01059349, -0.99994052, -0.00259573, -0.01456174,
            0,          0,          0,         1 ]

   #[0.00146073,  0.04160043,  0.99913326,  0.0278737,
    #                -0.99995403,  0.00952944,  0.00106516, -0.07832117,
     #               -0.00947687, -0.99908888,  0.04161244, -0.01044383,
      #               0,         0,         0,          1]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation. 
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     
acc_w: 0.001        # accelerometer bias random work noise standard deviation.  
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: -0.039                           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
